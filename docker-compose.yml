version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ./user-management-backend
      dockerfile: Dockerfile
    container_name: user-management-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:testdb
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_H2_CONSOLE_ENABLED=true
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_JPA_SHOW_SQL=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health/simple"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - user-management-network
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: ./user-management-frontend
      dockerfile: Dockerfile
    container_name: user-management-frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - REACT_APP_API_URL=/api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - user-management-network
    restart: unless-stopped

networks:
  user-management-network:
    driver: bridge

volumes:
  backend-data:
    driver: local