#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üìù Validating commit message..."

# Read the commit message
commit_regex='^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .{1,50}'

# Check if the commit message matches the expected format
if ! grep -qE "$commit_regex" "$1"; then
    echo "‚ùå Invalid commit message format!"
    echo ""
    echo "Expected format: type(scope): description"
    echo ""
    echo "Types:"
    echo "  feat     - New feature"
    echo "  fix      - Bug fix"
    echo "  docs     - Documentation changes"
    echo "  style    - Code style changes (formatting, etc.)"
    echo "  refactor - Code refactoring"
    echo "  test     - Adding or updating tests"
    echo "  chore    - Build process or auxiliary tool changes"
    echo "  perf     - Performance improvements"
    echo "  ci       - CI/CD changes"
    echo "  build    - Build system changes"
    echo "  revert   - Reverting previous commits"
    echo ""
    echo "Examples:"
    echo "  feat(user): add user registration endpoint"
    echo "  fix(api): resolve 500 error in user search"
    echo "  docs(readme): update installation instructions"
    echo "  test(service): add unit tests for UserService"
    echo "  chore(deps): update Spring Boot to 2.7.1"
    echo ""
    echo "Your commit message:"
    echo "$(cat "$1")"
    echo ""
    exit 1
fi

# Check for common mistakes
commit_message=$(cat "$1")

# Check for trailing period
if echo "$commit_message" | grep -q "\.$"; then
    echo "‚ö†Ô∏è  Warning: Commit message ends with a period. Consider removing it."
fi

# Check for capital letter at the beginning
if echo "$commit_message" | grep -q "^[A-Z]"; then
    echo "‚ö†Ô∏è  Warning: Commit message starts with a capital letter. Consider using lowercase."
fi

# Check for very long descriptions
if echo "$commit_message" | grep -q ".\{51\}"; then
    echo "‚ö†Ô∏è  Warning: Commit message description is longer than 50 characters."
fi

# Check for imperative mood
if echo "$commit_message" | grep -q "added\|fixed\|updated\|changed\|removed"; then
    echo "‚ö†Ô∏è  Warning: Consider using imperative mood (e.g., 'add' instead of 'added')."
fi

echo "‚úÖ Commit message validation passed!"

